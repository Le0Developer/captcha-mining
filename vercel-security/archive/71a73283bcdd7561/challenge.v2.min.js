"use strict";

var v_1_ = new TextEncoder("utf-8");
var v_2_ = new TextDecoder("utf-8");
var v_4_ = new DataView(new ArrayBuffer(8));
var vA_0_2_ = [];
var vLSRuntimeticks_1_ = "runtime.ticks";
var vLSRuntimesleepTicks_1_ = "runtime.sleepTicks";
var vLSSyscalljsfinalizeRef_1_ = "syscall/js.finalizeRef";
var vLSSyscalljsstringVal_1_ = "syscall/js.stringVal";
var vLSSyscalljsvalueGet_1_ = "syscall/js.valueGet";
var vLSSyscalljsvalueSet_1_ = "syscall/js.valueSet";
var vLSSyscalljsvalueDelete_1_ = "syscall/js.valueDelete";
var vLSSyscalljsvalueIndex_1_ = "syscall/js.valueIndex";
var vLSSyscalljsvalueSetInd_1_ = "syscall/js.valueSetIndex";
var vLSSyscalljsvalueCall_1_ = "syscall/js.valueCall";
var vLSSyscalljsvalueInvoke_1_ = "syscall/js.valueInvoke";
var vLSSyscalljsvalueNew_1_ = "syscall/js.valueNew";
var vLSSyscalljsvalueLength_1_ = "syscall/js.valueLength";
var vLSSyscalljsvaluePrepar_1_ = "syscall/js.valuePrepareString";
var vLSSyscalljsvalueLoadSt_1_ = "syscall/js.valueLoadString";
var vLSSyscalljsvalueInstan_1_ = "syscall/js.valueInstanceOf";
var vLSSyscalljscopyBytesTo_1_ = "syscall/js.copyBytesToGo";
var vLSSyscalljscopyBytesTo_1_2 = "syscall/js.copyBytesToJS";
var vC_1_ = class {
  constructor() {
    this._callbackTimeouts = new Map();
    this._nextCallbackTimeoutID = 1;
    const vF_0_1_19_C = () => new DataView(this._inst.exports.memory.buffer);
    const vF_1_6_18_C = p_2_F_1_6C => {
      v_4_.setBigInt64(0, p_2_F_1_6C, true);
      const v_3_F_1_6C = v_4_.getFloat64(0, true);
      if (v_3_F_1_6C === 0) {
        return;
      }
      if (!isNaN(v_3_F_1_6C)) {
        return v_3_F_1_6C;
      }
      const v_1_F_1_6C = p_2_F_1_6C & 0xffffffffn;
      return this._values[v_1_F_1_6C];
    };
    const vF_1_2_1_C = p_1_F_1_2C => {
      const v_1_F_1_2C = vF_0_1_19_C().getBigUint64(p_1_F_1_2C, true);
      return vF_1_6_18_C(v_1_F_1_2C);
    };
    const vF_1_9_4_C = p_9_F_1_9C => {
      const v_6_F_1_9C = 0x7ff80000n;
      if (typeof p_9_F_1_9C == "number") {
        if (isNaN(p_9_F_1_9C)) {
          return v_6_F_1_9C << 0x20n;
        } else if (p_9_F_1_9C === 0) {
          return v_6_F_1_9C << 0x20n | 0x1n;
        } else {
          v_4_.setFloat64(0, p_9_F_1_9C, true);
          return v_4_.getBigInt64(0, true);
        }
      }
      switch (p_9_F_1_9C) {
        case undefined:
          return 0x0n;
        case null:
          return v_6_F_1_9C << 0x20n | 0x2n;
        case true:
          return v_6_F_1_9C << 0x20n | 0x3n;
        case false:
          return v_6_F_1_9C << 0x20n | 0x4n;
      }
      let v_7_F_1_9C = this._ids.get(p_9_F_1_9C);
      if (v_7_F_1_9C === undefined) {
        v_7_F_1_9C = this._idPool.pop();
        if (v_7_F_1_9C === undefined) {
          v_7_F_1_9C = BigInt(this._values.length);
        }
        this._values[v_7_F_1_9C] = p_9_F_1_9C;
        this._goRefCounts[v_7_F_1_9C] = 0;
        this._ids.set(p_9_F_1_9C, v_7_F_1_9C);
      }
      this._goRefCounts[v_7_F_1_9C]++;
      let v_1_F_1_9C = 0x1n;
      switch (typeof p_9_F_1_9C) {
        case "string":
          v_1_F_1_9C = 0x2n;
          break;
        case "symbol":
          v_1_F_1_9C = 0x3n;
          break;
        case "function":
          v_1_F_1_9C = 0x4n;
          break;
      }
      return v_7_F_1_9C | (v_6_F_1_9C | v_1_F_1_9C) << 0x20n;
    };
    const vF_2_2_7_C = (p_1_F_2_2C, p_1_F_2_2C2) => {
      const vVF_1_9_4_C_1_F_2_2C = vF_1_9_4_C(p_1_F_2_2C2);
      vF_0_1_19_C().setBigUint64(p_1_F_2_2C, vVF_1_9_4_C_1_F_2_2C, true);
    };
    const vF_3_1_4_C = (p_1_F_3_1C, p_1_F_3_1C2, p_0_F_3_1C) => new Uint8Array(this._inst.exports.memory.buffer, p_1_F_3_1C, p_1_F_3_1C2);
    const vF_3_3_3_C = (p_1_F_3_3C, p_2_F_3_3C, p_0_F_3_3C) => {
      const v_2_F_3_3C = new Array(p_2_F_3_3C);
      for (let vLN0_4_F_3_3C = 0; vLN0_4_F_3_3C < p_2_F_3_3C; vLN0_4_F_3_3C++) {
        v_2_F_3_3C[vLN0_4_F_3_3C] = vF_1_2_1_C(p_1_F_3_3C + vLN0_4_F_3_3C * 8);
      }
      return v_2_F_3_3C;
    };
    const vF_2_1_5_C = (p_1_F_2_1C, p_1_F_2_1C2) => v_2_.decode(new DataView(this._inst.exports.memory.buffer, p_1_F_2_1C, p_1_F_2_1C2));
    const v_1_C = Date.now() - performance.now();
    this.importObject = {
      wasi_snapshot_preview1: {
        fd_write: function (p_2_F_4_4C, p_1_F_4_4C, p_1_F_4_4C2, p_1_F_4_4C3) {
          let vLN0_1_F_4_4C = 0;
          if (p_2_F_4_4C == 1) {
            for (let vLN0_3_F_4_4C = 0; vLN0_3_F_4_4C < p_1_F_4_4C2; vLN0_3_F_4_4C++) {
              const v_2_F_4_4C = p_1_F_4_4C + vLN0_3_F_4_4C * 8;
              const v_1_F_4_4C = vF_0_1_19_C().getUint32(v_2_F_4_4C + 0, true);
              const v_2_F_4_4C2 = vF_0_1_19_C().getUint32(v_2_F_4_4C + 4, true);
              vLN0_1_F_4_4C += v_2_F_4_4C2;
              for (let vLN0_3_F_4_4C2 = 0; vLN0_3_F_4_4C2 < v_2_F_4_4C2; vLN0_3_F_4_4C2++) {
                const v_3_F_4_4C = vF_0_1_19_C().getUint8(v_1_F_4_4C + vLN0_3_F_4_4C2);
                if (v_3_F_4_4C != 13) {
                  if (v_3_F_4_4C == 10) {
                    const v_1_F_4_4C2 = v_2_.decode(new Uint8Array(vA_0_2_));
                    vA_0_2_ = [];
                    console.log(v_1_F_4_4C2);
                  } else {
                    vA_0_2_.push(v_3_F_4_4C);
                  }
                }
              }
            }
          } else {
            console.error("invalid file descriptor:", p_2_F_4_4C);
          }
          vF_0_1_19_C().setUint32(p_1_F_4_4C3, vLN0_1_F_4_4C, true);
          return 0;
        },
        fd_close: () => 0,
        fd_fdstat_get: () => 0,
        fd_seek: () => 0,
        proc_exit: p_1_F_1_1C => {
          throw "trying to exit with code " + p_1_F_1_1C;
        },
        random_get: (p_1_F_2_2C3, p_1_F_2_2C4) => {
          crypto.getRandomValues(vF_3_1_4_C(p_1_F_2_2C3, p_1_F_2_2C4));
          return 0;
        }
      },
      gojs: {
        [vLSRuntimeticks_1_]: () => v_1_C + performance.now(),
        [vLSRuntimesleepTicks_1_]: p_1_F_1_1C2 => {
          setTimeout(this._inst.exports.go_scheduler, p_1_F_1_1C2);
        },
        [vLSSyscalljsfinalizeRef_1_]: p_0_F_1_1C => {
          console.error("syscall/js.finalizeRef not implemented");
        },
        [vLSSyscalljsstringVal_1_]: (p_1_F_2_2C5, p_1_F_2_2C6) => {
          const vVF_2_1_5_C_1_F_2_2C = vF_2_1_5_C(p_1_F_2_2C5, p_1_F_2_2C6);
          return vF_1_9_4_C(vVF_2_1_5_C_1_F_2_2C);
        },
        [vLSSyscalljsvalueGet_1_]: (p_1_F_3_4C, p_1_F_3_4C2, p_1_F_3_4C3) => {
          const vVF_2_1_5_C_1_F_3_4C = vF_2_1_5_C(p_1_F_3_4C2, p_1_F_3_4C3);
          const vVF_1_6_18_C_1_F_3_4C = vF_1_6_18_C(p_1_F_3_4C);
          const v_1_F_3_4C = Reflect.get(vVF_1_6_18_C_1_F_3_4C, vVF_2_1_5_C_1_F_3_4C);
          return vF_1_9_4_C(v_1_F_3_4C);
        },
        [vLSSyscalljsvalueSet_1_]: (p_1_F_4_4C4, p_1_F_4_4C5, p_1_F_4_4C6, p_1_F_4_4C7) => {
          const vVF_1_6_18_C_1_F_4_4C = vF_1_6_18_C(p_1_F_4_4C4);
          const vVF_2_1_5_C_1_F_4_4C = vF_2_1_5_C(p_1_F_4_4C5, p_1_F_4_4C6);
          const vVF_1_6_18_C_1_F_4_4C2 = vF_1_6_18_C(p_1_F_4_4C7);
          Reflect.set(vVF_1_6_18_C_1_F_4_4C, vVF_2_1_5_C_1_F_4_4C, vVF_1_6_18_C_1_F_4_4C2);
        },
        [vLSSyscalljsvalueDelete_1_]: (p_1_F_3_3C2, p_1_F_3_3C3, p_1_F_3_3C4) => {
          const vVF_1_6_18_C_1_F_3_3C = vF_1_6_18_C(p_1_F_3_3C2);
          const vVF_2_1_5_C_1_F_3_3C = vF_2_1_5_C(p_1_F_3_3C3, p_1_F_3_3C4);
          Reflect.deleteProperty(vVF_1_6_18_C_1_F_3_3C, vVF_2_1_5_C_1_F_3_3C);
        },
        [vLSSyscalljsvalueIndex_1_]: (p_1_F_2_1C3, p_1_F_2_1C4) => vF_1_9_4_C(Reflect.get(vF_1_6_18_C(p_1_F_2_1C3), p_1_F_2_1C4)),
        [vLSSyscalljsvalueSetInd_1_]: (p_1_F_3_1C3, p_1_F_3_1C4, p_1_F_3_1C5) => {
          Reflect.set(vF_1_6_18_C(p_1_F_3_1C3), p_1_F_3_1C4, vF_1_6_18_C(p_1_F_3_1C5));
        },
        [vLSSyscalljsvalueCall_1_]: (p_4_F_7_4C, p_1_F_7_4C, p_1_F_7_4C2, p_1_F_7_4C3, p_1_F_7_4C4, p_1_F_7_4C5, p_1_F_7_4C6) => {
          const vVF_1_6_18_C_2_F_7_4C = vF_1_6_18_C(p_1_F_7_4C);
          const vVF_2_1_5_C_1_F_7_4C = vF_2_1_5_C(p_1_F_7_4C2, p_1_F_7_4C3);
          const vVF_3_3_3_C_1_F_7_4C = vF_3_3_3_C(p_1_F_7_4C4, p_1_F_7_4C5, p_1_F_7_4C6);
          try {
            const v_1_F_7_4C = Reflect.get(vVF_1_6_18_C_2_F_7_4C, vVF_2_1_5_C_1_F_7_4C);
            vF_2_2_7_C(p_4_F_7_4C, Reflect.apply(v_1_F_7_4C, vVF_1_6_18_C_2_F_7_4C, vVF_3_3_3_C_1_F_7_4C));
            vF_0_1_19_C().setUint8(p_4_F_7_4C + 8, 1);
          } catch (e_1_F_7_4C) {
            vF_2_2_7_C(p_4_F_7_4C, e_1_F_7_4C);
            vF_0_1_19_C().setUint8(p_4_F_7_4C + 8, 0);
          }
        },
        [vLSSyscalljsvalueInvoke_1_]: (p_4_F_5_1C, p_1_F_5_1C, p_1_F_5_1C2, p_1_F_5_1C3, p_1_F_5_1C4) => {
          try {
            const vVF_1_6_18_C_1_F_5_1C = vF_1_6_18_C(p_1_F_5_1C);
            const vVF_3_3_3_C_1_F_5_1C = vF_3_3_3_C(p_1_F_5_1C2, p_1_F_5_1C3, p_1_F_5_1C4);
            vF_2_2_7_C(p_4_F_5_1C, Reflect.apply(vVF_1_6_18_C_1_F_5_1C, undefined, vVF_3_3_3_C_1_F_5_1C));
            vF_0_1_19_C().setUint8(p_4_F_5_1C + 8, 1);
          } catch (e_1_F_5_1C) {
            vF_2_2_7_C(p_4_F_5_1C, e_1_F_5_1C);
            vF_0_1_19_C().setUint8(p_4_F_5_1C + 8, 0);
          }
        },
        [vLSSyscalljsvalueNew_1_]: (p_4_F_5_3C, p_1_F_5_3C, p_1_F_5_3C2, p_1_F_5_3C3, p_1_F_5_3C4) => {
          const vVF_1_6_18_C_1_F_5_3C = vF_1_6_18_C(p_1_F_5_3C);
          const vVF_3_3_3_C_1_F_5_3C = vF_3_3_3_C(p_1_F_5_3C2, p_1_F_5_3C3, p_1_F_5_3C4);
          try {
            vF_2_2_7_C(p_4_F_5_3C, Reflect.construct(vVF_1_6_18_C_1_F_5_3C, vVF_3_3_3_C_1_F_5_3C));
            vF_0_1_19_C().setUint8(p_4_F_5_3C + 8, 1);
          } catch (e_1_F_5_3C) {
            vF_2_2_7_C(p_4_F_5_3C, e_1_F_5_3C);
            vF_0_1_19_C().setUint8(p_4_F_5_3C + 8, 0);
          }
        },
        [vLSSyscalljsvalueLength_1_]: p_1_F_1_1C3 => vF_1_6_18_C(p_1_F_1_1C3).length,
        [vLSSyscalljsvaluePrepar_1_]: (p_2_F_2_4C, p_1_F_2_4C) => {
          const vString_1_F_2_4C = String(vF_1_6_18_C(p_1_F_2_4C));
          const v_2_F_2_4C = v_1_.encode(vString_1_F_2_4C);
          vF_2_2_7_C(p_2_F_2_4C, v_2_F_2_4C);
          vF_0_1_19_C().setInt32(p_2_F_2_4C + 8, v_2_F_2_4C.length, true);
        },
        [vLSSyscalljsvalueLoadSt_1_]: (p_1_F_4_2C, p_1_F_4_2C2, p_1_F_4_2C3, p_1_F_4_2C4) => {
          const vVF_1_6_18_C_1_F_4_2C = vF_1_6_18_C(p_1_F_4_2C);
          vF_3_1_4_C(p_1_F_4_2C2, p_1_F_4_2C3, p_1_F_4_2C4).set(vVF_1_6_18_C_1_F_4_2C);
        },
        [vLSSyscalljsvalueInstan_1_]: (p_1_F_2_1C5, p_1_F_2_1C6) => vF_1_6_18_C(p_1_F_2_1C5) instanceof vF_1_6_18_C(p_1_F_2_1C6),
        [vLSSyscalljscopyBytesTo_1_]: (p_2_F_5_9C, p_1_F_5_9C, p_1_F_5_9C2, p_0_F_5_9C, p_1_F_5_9C3) => {
          const vP_2_F_5_9C_1_F_5_9C = p_2_F_5_9C;
          const v_2_F_5_9C = p_2_F_5_9C + 4;
          const vVF_3_1_4_C_2_F_5_9C = vF_3_1_4_C(p_1_F_5_9C, p_1_F_5_9C2);
          const vVF_1_6_18_C_3_F_5_9C = vF_1_6_18_C(p_1_F_5_9C3);
          if (!(vVF_1_6_18_C_3_F_5_9C instanceof Uint8Array) && !(vVF_1_6_18_C_3_F_5_9C instanceof Uint8ClampedArray)) {
            vF_0_1_19_C().setUint8(v_2_F_5_9C, 0);
            return;
          }
          const v_2_F_5_9C2 = vVF_1_6_18_C_3_F_5_9C.subarray(0, vVF_3_1_4_C_2_F_5_9C.length);
          vVF_3_1_4_C_2_F_5_9C.set(v_2_F_5_9C2);
          vF_0_1_19_C().setUint32(vP_2_F_5_9C_1_F_5_9C, v_2_F_5_9C2.length, true);
          vF_0_1_19_C().setUint8(v_2_F_5_9C, 1);
        },
        [vLSSyscalljscopyBytesTo_1_2]: (p_2_F_5_9C2, p_1_F_5_9C4, p_1_F_5_9C5, p_1_F_5_9C6, p_0_F_5_9C2) => {
          const vP_2_F_5_9C2_1_F_5_9C = p_2_F_5_9C2;
          const v_2_F_5_9C3 = p_2_F_5_9C2 + 4;
          const vVF_1_6_18_C_4_F_5_9C = vF_1_6_18_C(p_1_F_5_9C4);
          const vVF_3_1_4_C_1_F_5_9C = vF_3_1_4_C(p_1_F_5_9C5, p_1_F_5_9C6);
          if (!(vVF_1_6_18_C_4_F_5_9C instanceof Uint8Array) && !(vVF_1_6_18_C_4_F_5_9C instanceof Uint8ClampedArray)) {
            vF_0_1_19_C().setUint8(v_2_F_5_9C3, 0);
            return;
          }
          const v_2_F_5_9C4 = vVF_3_1_4_C_1_F_5_9C.subarray(0, vVF_1_6_18_C_4_F_5_9C.length);
          vVF_1_6_18_C_4_F_5_9C.set(v_2_F_5_9C4);
          vF_0_1_19_C().setUint32(vP_2_F_5_9C2_1_F_5_9C, v_2_F_5_9C4.length, true);
          vF_0_1_19_C().setUint8(v_2_F_5_9C3, 1);
        }
      }
    };
    this.importObject.env = this.importObject.gojs;
  }
  async run(p_1_C) {
    this._inst = p_1_C;
    this._values = [NaN, 0, null, true, false, self, this];
    this._goRefCounts = [];
    this._ids = new Map();
    this._idPool = [];
    this.exited = false;
    while (true) {
      const v_1_C2 = new Promise(p_1_F_1_1C4 => {
        this._resolveCallbackPromise = () => {
          if (this.exited) {
            throw new Error("bad callback: Go program has already exited");
          }
          setTimeout(p_1_F_1_1C4, 0);
        };
      });
      this._inst.exports._start();
      if (this.exited) {
        break;
      }
      await v_1_C2;
    }
  }
  _resume() {
    if (this.exited) {
      throw new Error("Go program has already exited");
    }
    this._inst.exports.resume();
    if (this.exited) {
      this._resolveExitPromise();
    }
  }
  _makeFuncWrapper(p_1_C2) {
    const vThis_2_C = this;
    return function () {
      const vO_3_2_F_0_4C = {
        id: p_1_C2,
        this: this,
        args: arguments
      };
      vThis_2_C._pendingEvent = vO_3_2_F_0_4C;
      vThis_2_C._resume();
      return vO_3_2_F_0_4C.result;
    };
  }
};
var vO_2_11_ = {
  token: "",
  messagePort: null
};
var v_3_ = new Map();
function f_1_1_(p_1_) {
  const v_2_2 = Math.random().toString(36).slice(2);
  f_1_6_({
    type: "eval-request",
    id: v_2_2,
    argv: p_1_,
    token: vO_2_11_.token
  });
  return new Promise((p_1_F_2_1, p_1_F_2_12) => {
    v_3_.set(v_2_2, {
      resolve: p_1_F_2_1,
      reject: p_1_F_2_12
    });
  });
}
function f_0_1_() {
  let vLfalse_1_ = false;
  const v_2_3 = new Error();
  Object.defineProperty(v_2_3, "stack", {
    get() {
      vLfalse_1_ = true;
      return "";
    }
  });
  console.log(v_2_3);
  return vLfalse_1_;
}
async function f_0_1_2() {
  const v_1_2 = await fetch("/.well-known/vercel/security/static/challenge.v2.wasm");
  const v_4_2 = new vC_1_();
  v_4_2.importObject.gojs["syscall/js.finalizeRef"] = () => null;
  const {
    instance: Be
  } = await WebAssembly.instantiateStreaming(v_1_2, v_4_2.importObject);
  v_4_2.run(Be);
  return {
    instance: Be,
    go: v_4_2
  };
}
async function f_3_1_(p_1_2, p_1_3, p_1_4) {
  const v_10_ = await fetch("/.well-known/vercel/security/request-challenge", {
    method: "POST",
    headers: {
      "x-vercel-challenge-token": p_1_2,
      "x-vercel-challenge-solution": p_1_3,
      "x-vercel-challenge-version": p_1_4
    }
  });
  if (!v_10_.ok) {
    if (v_10_.headers.get("Cf-Mitigated")) {
      const v_2_4 = v_10_.headers.get("Cf-Ray");
      const v_1_3 = v_2_4 ? "Ray ID: " + v_2_4 : "Challenge blocked by Cloudflare";
      const v_2_5 = new Error(v_1_3);
      v_2_5.__blocked = true;
      throw v_2_5;
    }
    if (v_10_.status === 401 || v_10_.status === 403) {
      const v_2_6 = new Error("Challenge blocked");
      v_2_6.__blocked = true;
      throw v_2_6;
    }
    if (v_10_.status === 404) {
      const v_2_7 = new Error("Challenge not forwarded");
      v_2_7.__blocked = true;
      throw v_2_7;
    }
    if (v_10_.status >= 700) {
      const v_2_8 = new Error(String(v_10_.status));
      v_2_8.__failed = true;
      throw v_2_8;
    }
    throw new Error(v_10_.statusText);
  }
  return v_10_;
}
function f_1_6_(p_1_5) {
  vO_2_11_.messagePort?.postMessage(p_1_5);
}
async function f_1_1_2(p_3_) {
  await f_0_1_2();
  let v_3_2;
  try {
    const v_1_4 = await Solve(p_3_.token);
    v_3_2 = JSON.parse(v_1_4);
    const v_1_5 = v_3_2.solution;
    await f_3_1_(p_3_.token, v_1_5, p_3_.version);
    f_1_6_({
      type: "solve-response",
      success: true,
      token: vO_2_11_.token
    });
  } catch (e_12_) {
    const v_1_6 = e_12_ != null && typeof e_12_ == "object" && "__blocked" in e_12_;
    const v_1_7 = e_12_ != null && typeof e_12_ == "object" && "__failed" in e_12_;
    if (v_1_6) {
      const v_1_8 = e_12_ instanceof Error ? e_12_.message : String(e_12_);
      f_1_6_({
        type: "solve-response",
        success: false,
        blocked: true,
        metadata: v_1_8 ?? undefined,
        token: vO_2_11_.token
      });
    } else if (v_3_2?.badInfo) {
      f_1_6_({
        type: "solve-response",
        success: false,
        blocked: false,
        metadata: v_3_2?.badInfo ?? undefined,
        token: vO_2_11_.token
      });
    } else if (v_1_7) {
      const v_1_9 = e_12_ instanceof Error ? e_12_.message : String(e_12_);
      f_1_6_({
        type: "solve-response",
        success: false,
        blocked: false,
        metadata: v_1_9 ?? undefined,
        token: vO_2_11_.token
      });
    } else {
      f_1_6_({
        type: "solve-response",
        success: false,
        blocked: false,
        metadata: undefined,
        token: vO_2_11_.token
      });
    }
  }
}
function f_1_1_3(p_8_) {
  if (f_1_1_4(p_8_)) {
    switch (p_8_.data.type) {
      case "solve-request":
        {
          f_1_1_2(p_8_.data);
          break;
        }
      case "eval-response":
        {
          const v_2_9 = v_3_.get(p_8_.data.id);
          if ("value" in p_8_.data) {
            v_2_9?.resolve(p_8_.data.value);
          } else {
            v_2_9?.reject(p_8_.data.error);
          }
          v_3_.delete(p_8_.data.id);
          break;
        }
      default:
        break;
    }
  }
}
function f_1_1_4(p_2_) {
  vO_2_11_.token = vO_2_11_.token || p_2_.data.token;
  return p_2_.data.token === vO_2_11_.token;
}
self.onmessage = p_1_F_1_3 => {
  const v_2_F_1_3 = p_1_F_1_3.data.port;
  vO_2_11_.messagePort = v_2_F_1_3;
  v_2_F_1_3.onmessage = f_1_1_3;
};
self.setTimeout.e = f_1_1_;
self.setTimeout.d = f_0_1_;